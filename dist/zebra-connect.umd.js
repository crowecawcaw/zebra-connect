!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e(t.zebraConnect={})}(this,function(t){var e="function"==typeof fetch?fetch.bind():function(t,e){return e=e||{},new Promise(function(n,r){var s=new XMLHttpRequest;for(var i in s.open(e.method||"get",t),e.headers)s.setRequestHeader(i,e.headers[i]);function o(){var t,e=[],n=[],r={};return s.getAllResponseHeaders().replace(/^(.*?):\s*([\s\S]*?)$/gm,function(s,i,o){e.push(i=i.toLowerCase()),n.push([i,o]),r[i]=(t=r[i])?t+","+o:o}),{ok:1==(s.status/200|0),status:s.status,statusText:s.statusText,url:s.responseURL,clone:o,text:function(){return Promise.resolve(s.responseText)},json:function(){return Promise.resolve(s.responseText).then(JSON.parse)},blob:function(){return Promise.resolve(new Blob([s.response]))},headers:{keys:function(){return e},entries:function(){return n},get:function(t){return r[t.toLowerCase()]},has:function(t){return t.toLowerCase()in r}}}}s.withCredentials="include"==e.credentials,s.onload=function(){n(o())},s.onerror=r,s.send(e.body)})},n=function(t){this.url=t,this.getDefaultPrinter=this.getDefaultPrinter.bind(this),this.getAllPrinters=this.getAllPrinters.bind(this)};n.prototype.getDefaultPrinter=function(){var t=this;return e(this.url+"/default?type=printer").then(function(t){return t.status>=200&&t.status<300?t.json():Promise.reject(t.status)}).then(function(e){return new r(t.url,e)})},n.prototype.getAllPrinters=function(){var t=this;return e(this.url+"/available").then(function(t){return t.status>=200&&t.status<300?t.json():Promise.reject(t.status)}).then(function(e){return e.printer.map(function(e){return new r({url:t.url,device:e})})})};var r=function(t){var e=t.device;this.url=t.url,this.name=e.name,this.uid=e.uid,this.device=e};r.prototype.post=function(t,n){return e(""+this.url+t,{method:"POST",body:JSON.stringify(n)}).then(function(t){return t.status>=200&&t.status<300?t.json():Promise.reject(t.status)})},r.prototype.read=function(){return this.post("/read",{device:this.device})},r.prototype.write=function(t){this.post("/write",{device:this.device,data:t})},r.prototype.print=function(t){return this.write(t)},r.prototype.save=function(){return{url:this.url,device:this.device}},t.Server=n,t.Printer=r});
//# sourceMappingURL=zebra-connect.umd.js.map
